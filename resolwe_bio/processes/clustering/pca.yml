# ===
# PCA
# ===
---

- slug: pca
  name: PCA
  requirements:
    expression-engine: jinja
    executor:
      docker:
        image: resolwebio/rnaseq:1.4.0
  data_name: 'PCA'
  version: 1.2.2
  type: data:pca
  category: analyses
  persistence: TEMP
  scheduling_class: interactive
  description: >
    Principal component analysis (PCA)
  input:
    - name: exps
      label: Expressions
      type: list:data:expression
    - name: genes
      label: Gene subset
      type: list:basic:string
      required: false
    - name: source
      label: Gene ID database of selected genes
      description: This field is required if gene subset is set.
      type: basic:string
      required: false
    - name: species
      label: Species
      type: basic:string
      description: >
        Species latin name. This field is required if gene subset is set.
      allow_custom_choice: true
      required: false
      choices:
        - label: Homo sapiens
          value: Homo sapiens
        - label: Mus musculus
          value: Mus musculus
        - label: Rattus norvegicus
          value: Rattus norvegicus
        - label: Dictyostelium discoideum
          value: Dictyostelium discoideum
        - label: Odocoileus virginianus texanus
          value: Odocoileus virginianus texanus
        - label: Solanum tuberosum
          value: Solanum tuberosum
    - name: filter
      label: Exclude genes with low expression
      type: basic:boolean
      default: true
      description: >
        Exclude/filter unexpressed genes and genes with cumulative normalized expression lower than number of samples.
  output:
    - name: pca
      label: PCA
      type: basic:json
  run:
    runtime: polyglot
    language: bash
    program: |

      {% for e in exps %}

        {% if e.source != (exps|first).source %}
          re-warning "All expression data must be annotated by the same genome database."
          re-error "Sample {{ exps|first|name }} has {{ (exps|first).source }} gene IDs, while sample {{ e|name }} has {{ e.source }} gene IDs."
        {% endif %}

        {% if e.species != (exps|first).species %}
          re-warning "All expressions must be of the same Species."
          re-error "Sample {{ exps|first|name }} is {{ (exps|first).species }}, while sample {{ e|name }} is {{ e.species }}."
        {% endif %}

        {% if e.exp_type != (exps|first).exp_type %}
          re-warning "All expressions must be of the same Expression type."
          re-error "Expression {{ exps|first|name }} has {{ (exps|first).exp_type }} expression type, while sample {{ e|name }} has {{ e.exp_type }} expression type."
        {% endif %}

        {% if e.exp_type != (exps|first).exp_type %}
          re-warning "All expressions must be of the same Expression type."
          re-error "Expression {{ exps|first|name }} has {{ (exps|first).feature_type }} feature type, while sample {{ e|name }} has {{ e.feature_type }} feature type."
        {% endif %}

        {% if genes %}
          {%if e.source != source %}
            re-warning "Selected genes must be annotated by the same genome database as all expression files."
            re-error "Gene IDs are from {{ source }} database while sample {{ e|name }} has gene IDs from {{ e.source }} database."
          {% endif %}
          {%if e.species != species %}
            re-warning "Selected genes must be from the same species as all expression files."
            re-error "Selected genes are {{ species }}, while expression {{ e|name }} is {{ e.species }}"
          {% endif %}
        {% endif %}

      {% endfor %}

      pca.py \
        --sample-files {% for exp in exps %} {{ exp.exp.file }} {% endfor %} \
        --sample-ids {% for exp in exps %} {{ exp|sample_id }} {% endfor %} \
        {% if genes %} --gene-labels {% for gene in genes %} {{ gene }} {% endfor %} {% endif %} \
        {% if filter %} --skip-low-expressions {% endif %} \
        --output-fn pca.json
      re-checkrc "Principal component analysis failed."

      re-save pca pca.json

