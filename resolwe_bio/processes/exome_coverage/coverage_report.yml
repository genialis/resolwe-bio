# ============================
# Processors for Gene Coverage
# ============================
---

- slug: coverage-garvan
  name: Exome Coverage Report
  requirements:
    expression-engine: jinja
    executor:
      docker:
        image: resolwebio/legacy:latest
  data_name: "Coverage report ({{ mapping.bam.file|basename|default('?') }})"
  version: 2.1.1
  type: data:exomecoverage
  category: analyses
  flow_collection: sample
  persistence: TEMP
  description: >
    An exome coverage report tool developed for the Garvan Institute, Sydney, Australia. The tool reports coverage
    of exons and their potential variants in JSON format.
  input:
    - name: mapping
      label: Mapping file
      type: data:alignment:bam
    - name: gtf
      label: Gene Transfer Format file
      type: data:annotation:gtf
    - name: variants
      label: Variants in VCF format
      type: data:variants:vcf
      required: false
    - name: filter
      label: Coverage Filter
      type: basic:integer
      description: >
        A threshold filter to use when reporting exon coverage.
      default: 15
    - name: genes
      label: List of genes
      type: list:basic:string
      description: >
        Names of genes for which to have coverages reported.
      placeholder: input gene ids
      default: [PKD1, TPPP]
  output:
    - name: report
      label: Coverage Report
      type: basic:json
      required: false
    - name: missing
      label: Missing Genes
      type: basic:json
    - name: jbrowse
      label: JBrowse XML
      type: basic:json
      required: false
    - name: exon_coverage
      label: Exon coverage in tsv format
      type: basic:file
    - name: transcript_coverage
      label: Transcript coverage in tsv format
      type: basic:file
    - name: variants_coverage
      label: Variants coverage in tsv format
      type: basic:file
  run:
    runtime: polyglot
    language: bash
    program: |
      garvan_coverage.py {{ filter }} {{ mapping.bam.file }} {{ gtf.annot.file }} {% if variants %}--variants {{ variants.vcf.file }}{% endif %} {% for g in genes %}{{g}} {% endfor %}
      re-checkrc

      re-save-file exon_coverage exons.txt.gz
      re-save-file transcript_coverage transcripts.txt.gz
      re-save-file variants_coverage variants.txt.gz
