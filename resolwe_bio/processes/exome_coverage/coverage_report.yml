# ============================
# Processors for Gene Coverage
# ============================
---

- slug: coverage-garvan
  name: Exome Coverage Report
  requirements:
    expression-engine: jinja
  data_name: "Coverage report ({{ mapping.bam.file|basename|default('?') }})"
  version: 2.0.6
  type: data:coverage
  category: analyses
  flow_collection: sample
  persistence: TEMP
  description: >
    An exome coverage report tool developed for the Garvan Institute, Sydney, Australia. The tool reports coverage
    of exons and their potential variants in JSON format.
  input:
    - name: mapping
      label: Mapping file
      type: data:alignment:bam
    - name: gtf
      label: Gene Transfer Format file
      type: data:annotation:gtf
    - name: variants
      label: Variants in VCF format
      type: data:variants:vcf
      required: false
    - name: filter
      label: Coverage Filter
      type: basic:integer
      description: >
        A threshold filter to use when reporting exon coverage.
      default: 15
    - name: genes
      label: List of genes
      type: list:basic:string
      description: >
        Names of genes for which to have coverages reported.
      placeholder: input gene ids
      default: [PKD1, TPPP]
  output:
    - name: report
      label: Coverage Report
      type: basic:json
      required: false
    - name: missing
      label: Missing Genes
      type: basic:json
    - name: jbrowse
      label: JBrowse XML
      type: basic:json
      required: false
    - name: exon_coverage
      label: Exon coverage in tsv format
      type: basic:file
    - name: transcript_coverage
      label: Transcript coverage in tsv format
      type: basic:file
    - name: variants_coverage
      label: Variants coverage in tsv format
      type: basic:file
  run:
    runtime: polyglot
    language: bash
    program: |
      garvan_coverage.py {{ filter }} '{{ mapping.bam.file }}' '{{ gtf.gtf.file }}' {% if variants %}--variants '{{ variants.vcf.file }}'{% endif %} {% for g in genes %}"{{g}}" {% endfor %}
      re-checkrc

      re-save-file exon_coverage exons.txt.gz
      re-save-file transcript_coverage transcripts.txt.gz
      re-save-file variants_coverage variants.txt.gz


- slug: coveragebed
  name: coverageBed
  requirements:
    expression-engine: jinja
  data_name: "Coverage ({{ alignment|sample_name|default('?') }})"
  version: 2.0.6
  type: data:coverage
  category: analyses
  flow_collection: sample
  persistence: TEMP
  description: >
    An exome coverage report tool developed for the Garvan Institute, Sydney, Australia. The tool reports coverage
    of exons and their potential variants in JSON format.
  input:
    - name: alignment
      label: Alignment (BAM)
      type: data:alignment:bam
    - name: bed
      label: BED file
      type: data:bed
  output:
    - name: cov
      label: Coverage
      type: basic:file
    - name: covd
      label: Coverage (depth at each position)
      type: basic:file
  run:
    runtime: polyglot
    language: bash
    program: |
      BAM_NAME=`basename '{{ alignment.bam.file }}' .bam`
      SAMPLE_NAME='{{ alignment|sample_name }}'

      picard-tools AddOrReplaceReadGroups I={{alignment.bam.file}} O="${BAM_NAME}.RG.bam" SO=coordinate RGID=amplicons RGLB=swift RGSM=${BAM_NAME} RGPL=illumina RGPU=miseq
      re-checkrc

      coverageBed -abam "${BAM_NAME}.RG.bam" -b {{bed.BED.file}} -d > "${SAMPLE_NAME}.covd"
      re-checkrc
      re-progress 0.5

      coverageBed -abam "${BAM_NAME}.RG.bam" -b {{bed.BED.file}} > "${SAMPLE_NAME}.cov"
      re-checkrc

      re-save-file covd "${SAMPLE_NAME}.covd"
      re-save-file cov "${SAMPLE_NAME}.cov"
