- slug: amplicon-archive-multi-report
  name: Archive and make multi-sample report for amplicon data
  data_name: Amplicon archive and multi-sample report
  requirements:
    expression-engine: jinja
    executor:
      docker:
        image: resolwebio/latex:1.0.7
  version: 0.2.3
  type: "data:archive:samples:amplicon"
  category: other
  persistence: TEMP
  scheduling_class: interactive
  description: >
    Create an archive of output files. The ouput folder structure is
    organized by sample slug and data object's output-field names.
    Additionally, create multi-sample report for selected samples.
  input:
    - name: data
      label: Data list
      type: list:data
    - name: fields
      label: Output file fields
      type: list:basic:string
    - name: j
      label: Junk paths
      type: basic:boolean
      description: Store just names of saved files (junk the path)
      default: False
  output:
    - name: archive
      label: Archive of selected samples and a heatmap comparing them
      type: basic:file
  run:
    runtime: polyglot
    language: bash
    program: |

      SAMPLE_NAMES=()
      STATS_FILES=()
      COV_FILES=()
      GATKHC_FILES=()
      LF_FILES=()

      {% for d in data %}
        {% for field in fields %}
          {% if d[field].file %}
            mkdir -p {{ d|sample_slug }}/{{ field }}/
            ln -s --backup=numbered {{ d[field].file }} {{ d|sample_slug }}/{{ field }}/{{ d[field].file|basename }}
            {% for ref in d[field].refs %}
              ln -s --backup=numbered {{ ref }} {{ d|sample_slug }}/{{ field }}/{{ ref|basename }}
            {% endfor %}
          {% endif %}
          {% for file in d[field] %}
            {% if file.file %}
              mkdir -p {{ d|sample_slug }}/{{ field }}/
              ln -s --backup=numbered {{ file.file }} {{ d|sample_slug }}/{{ field }}/{{ file.file|basename }}
              {% for ref in file.refs %}
                ln -s --backup=numbered {{ ref }} {{ d|sample_slug }}/{{ field }}/{{ ref|basename }}
              {% endfor %}
            {% endif %}
          {% endfor %}
        {% endfor %}

        {% if 'data:report:amplicon' in d|type %}
          SAMPLE_NAMES+=({{ d | sample_name }})
          {% if d.stats.file %}
            STATS_FILES+=({{ d.stats.file }})
          {% endif %}
          {% if d.amplicon_cov.file %}
            COV_FILES+=({{ d.amplicon_cov.file }})
          {% endif %}
          {% for vfile in d.variant_tables %}
            {% if '_lf_variant_table.txt' in vfile.file|basename %}
              LF_FILES+=({{ vfile.file }})
            {% elif '_gatk_variant_table.txt' in vfile.file|basename %}
              GATKHC_FILES+=({{ vfile.file }})
            {% endif %}
          {% endfor %}
        {% endif %}
      {% endfor %}

      mkdir multisample_report
      # Bash syntax for computing Array size is clashing with jinja comments syntax.
      # With "raw" we tell jinja to leave this line alone.
      {% raw %}
      if [ "${#SAMPLE_NAMES[@]}" -lt "2" ]; then
        echo "You need to pick at least two samples to make a multi-sample report." > multisample_report/report.txt
      elif [ "${#STATS_FILES[@]}" -lt "${#SAMPLE_NAMES[@]}" ]; then
      {% endraw %}
        message="You have selected samples with legacy reports that cannot be used to produce multi-sample report."
        echo $message > multisample_report/report.txt
        re-warning "$message"
      else
        make_multireport.py \
          --sample "${SAMPLE_NAMES[@]}" \
          --stats "${STATS_FILES[@]}" \
          --cov "${COV_FILES[@]}" \
          --vcfgatkhc "${GATKHC_FILES[@]}" \
          --vcflf "${LF_FILES[@]}" \
          --template "/opt/resolwebio/assets/template_amplicon_report_multi_sample.tex" \
          --logo "/opt/resolwebio/assets/logo_genialis.pdf" \
          --afthreshold 0.01
        re-checkrc
        mv multireport.pdf multisample_report/report.pdf
        mv GATKHCvariants.html multisample_report/
        mv LoFreqvariants.html multisample_report/
      fi

      zip -0 -r {% if j %}-j {% endif %} results.zip */

      if [ -f multireport.tex ]; then
        # Reference source file (multireport.tex) for the debugging purposes if it exists
        re-save-file archive results.zip multireport.tex
      else
         re-save-file archive results.zip
      fi
