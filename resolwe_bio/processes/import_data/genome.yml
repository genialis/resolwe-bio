# ===============
# Import - Genome
# ===============
---

- slug: upload-genome
  name: Genome
  requirements:
    expression-engine: jinja
    executor:
      docker:
        image: resolwebio/legacy:latest
    resources:
      network: true
  data_name: '{{ src.file|default("?") }}'
  version: 3.0.1
  type: data:genome:fasta
  category: upload
  persistence: RAW
  description: >
    Upload genome sequence in FASTA format.
  input:
    - name: src
      label: Genome sequence (FASTA)
      type: basic:file
      description: >
        Genome sequence in FASTA format. Supported extensions: .fasta.gz (preferred), .fa.*, .fna.* or .fasta.*
      validate_regex: '\.(fasta|fa|fna|fsa)(|\.gz|\.bz2|\.tgz|\.tar\.gz|\.tar\.bz2|\.zip|\.rar|\.7z)$'
    - name: species
      label: Species
      type: basic:string
      description: >
        Species latin name.
      allow_custom_choice: true
      choices:
        - label: Homo sapiens
          value: Homo sapiens
        - label: Mus musculus
          value: Mus musculus
        - label: Rattus norvegicus
          value: Rattus norvegicus
        - label: Dictyostelium discoideum
          value: Dictyostelium discoideum
        - label: Odocoileus virginianus texanus
          value: Odocoileus virginianus texanus
        - label: Solanum tuberosum
          value: Solanum tuberosum
    - name: build
      label: Genome build
      type: basic:string
    - name: advanced
      label: Advanced
      group:
        - name: bowtie_index
          label: Bowtie index files
          type: basic:file
          required: false
          description: >
            Bowtie index files. Supported extensions (*.tar.gz).
          validate_regex: '(\.tar\.gz)$'
        - name: bowtie2_index
          label: Bowtie2 index files
          type: basic:file
          required: false
          description: >
            Bowtie2 index files. Supported extensions (*.tar.gz).
          validate_regex: '(\.tar\.gz)$'
        - name: bwa_index
          label: BWA index files
          type: basic:file
          required: false
          description: >
            BWA index files. Supported extensions (*.tar.gz).
          validate_regex: '(\.tar\.gz)$'
        - name: hisat2_index
          label: HISAT2 index files
          type: basic:file
          required: false
          description: >
            HISAT2 index files. Supported extensions (*.tar.gz).
          validate_regex: '(\.tar\.gz)$'
        - name: subread_index
          label: subread index files
          type: basic:file
          required: false
          description: >
            Subread index files. Supported extensions (*.tar.gz).
          validate_regex: '(\.tar\.gz)$'
  output:
    - name: fastagz
      label: Genome FASTA file (compressed)
      type: basic:file
    - name: fasta
      label: Genome FASTA file
      type: basic:file
    - name: index_bt
      label: Bowtie index
      type: basic:dir
    - name: index_bt2
      label: Bowtie2 index
      type: basic:dir
    - name: index_bwa
      label: BWA index
      type: basic:dir
    - name: index_hisat2
      label: HISAT2 index
      type: basic:dir
    - name: index_subread
      label: subread index
      type: basic:dir
    - name: fai
      label: Fasta index
      type: basic:file
    - name: dict
      label: Fasta dict
      type: basic:file
    - name: species
      label: Species
      type: basic:string
    - name: build
      label: Build
      type: basic:string
  run:
    runtime: polyglot
    language: bash
    program: |
      re-import {{ src.file_temp }} {{ src.file }} "fasta|fa|fna|fsa" "fasta" 0.5
      FASTA_NAME=${NAME}

      # If last line empty, remove this line from a FASTA file. Improves Cufflinks compatibility.
      if [ "$(tail -n 1 "${FASTA_NAME}.fasta")" == "" ]; then
        echo "Removing empty line at the end of FASTA file."
        sed -i '$ d' ${FASTA_NAME}.fasta
        rm "${FASTA_NAME}.fasta.gz"
        gzip -c -k "${FASTA_NAME}.fasta" > "${FASTA_NAME}.fasta.gz"
      fi

      # Create fasta index
      samtools faidx "${FASTA_NAME}.fasta"
      re-checkrc

      # Create fasta dictionary file
      picard-tools CreateSequenceDictionary R="${FASTA_NAME}.fasta" O="${FASTA_NAME}.dict"
      re-checkrc

      re-save-file fastagz "${FASTA_NAME}.fasta.gz"
      re-save-file fasta "${FASTA_NAME}.fasta"
      re-save-file fai "${FASTA_NAME}.fasta.fai"
      re-save-file dict "${FASTA_NAME}.dict"

      re-save species {{species}}
      re-save build {{build}}

      {% if advanced.bowtie_index %}
        re-import {{ advanced.bowtie_index.file_temp|default(advanced.bowtie_index.file) }} \
        {{ advanced.bowtie_index.file }} "tar" "tar" compress 0.6
        format_index_files.py ${NAME}.tar.gz ${FASTA_NAME}_index bowtie_index
      {% else %}
        mkdir bowtie_index
        bowtie-build "${FASTA_NAME}.fasta" "bowtie_index/${FASTA_NAME}_index"
        re-checkrc
        re-progress 0.6
      {% endif %}

      re-save-dir index_bt bowtie_index

      {% if advanced.bowtie2_index %}
        re-import {{ advanced.bowtie2_index.file_temp|default(advanced.bowtie2_index.file) }} \
        {{ advanced.bowtie2_index.file }} "tar" "tar" 0.7 compress
        format_index_files.py ${NAME}.tar.gz ${FASTA_NAME}_index bowtie2_index
      {% else %}
        mkdir bowtie2_index
        bowtie2-build "$FASTA_NAME.fasta" "bowtie2_index/${FASTA_NAME}_index"
        re-checkrc
        re-progress 0.7
      {% endif %}

      cp "${FASTA_NAME}.fasta" "bowtie2_index/${FASTA_NAME}_index.fa"
      re-save-dir index_bt2 bowtie2_index

      {% if advanced.bwa_index %}
        re-import {{ advanced.bwa_index.file_temp|default(advanced.bwa_index.file) }} \
        {{ advanced.bwa_index.file }} "tar" "tar" 0.8 compress
        format_index_files.py ${NAME}.tar.gz ${FASTA_NAME}.fasta BWA_index --bwa
      {% else %}
        mkdir BWA_index
        bwa index -p "BWA_index/${FASTA_NAME}.fasta" "${FASTA_NAME}.fasta"
        re-checkrc
        re-progress 0.8
      {% endif %}

      re-save-dir index_bwa BWA_index

      {% if advanced.hisat2_index %}
        re-import {{ advanced.hisat2_index.file_temp|default(advanced.hisat2_index.file) }} \
        {{ advanced.hisat2_index.file }} "tar" "tar" 0.9 compress
        format_index_files.py ${NAME}.tar.gz ${FASTA_NAME}_index hisat2_index
      {% else %}
        mkdir hisat2_index
        hisat2-build "${FASTA_NAME}.fasta" "hisat2_index/${FASTA_NAME}_index"
        re-checkrc
        re-progress 0.9
      {% endif %}

      re-save-dir index_hisat2 hisat2_index

      {% if advanced.subread_index %}
        re-import {{ advanced.subread_index.file_temp|default(advanced.subread_index.file) }} \
        {{ advanced.subread_index.file }} "tar" "tar" 0.9 compress
        format_index_files.py ${NAME}.tar.gz ${FASTA_NAME}_index subread_index
      {% else %}
        mkdir subread_index
        subread-buildindex "${FASTA_NAME}.fasta" -o "subread_index/${FASTA_NAME}_index"
        re-checkrc
        re-progress 0.9
      {% endif %}

      re-save-dir index_subread subread_index
