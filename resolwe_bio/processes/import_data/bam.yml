# ============
# Import - BAM
# ============
---

- slug: upload-bam
  name: BAM file
  requirements:
    expression-engine: jinja
    executor:
      docker:
        image: public.ecr.aws/genialis/resolwebio/rnaseq:6.0.0
    resources:
      cores: 4
      network: true
  data_name: '{{ src.file|default("?") }}'
  version: 1.8.1
  type: data:alignment:bam:upload
  flow_collection: sample
  category: Import
  persistence: RAW
  description: |
    Import a BAM file (.bam), which is the binary format for storing sequence
    alignment data. This format is described on the
    [SAM Tools web site](http://samtools.github.io/hts-specs/).
  input:
    - name: src
      label: Mapping (BAM)
      type: basic:file
      description: |
        A mapping file in BAM format. The file will be indexed on upload, so additional BAI files are not required.
      validate_regex: '\.(bam)$'
    - name: species
      label: Species
      type: basic:string
      description: |
        Species latin name.
      allow_custom_choice: true
      choices:
        - label: Homo sapiens
          value: Homo sapiens
        - label: Mus musculus
          value: Mus musculus
        - label: Rattus norvegicus
          value: Rattus norvegicus
        - label: Dictyostelium discoideum
          value: Dictyostelium discoideum
        - label: Odocoileus virginianus texanus
          value: Odocoileus virginianus texanus
        - label: Solanum tuberosum
          value: Solanum tuberosum
    - name: build
      label: Build
      type: basic:string
  output:
    - name: bam
      label: Uploaded file
      type: basic:file
    - name: bai
      label: Index BAI
      type: basic:file
    - name: stats
      label: Alignment statistics
      type: basic:file
    - name: species
      label: Species
      type: basic:string
    - name: build
      label: Build
      type: basic:string
  run:
    runtime: polyglot
    language: bash
    program: |
        re-import {{ src.file_temp }} {{ src.file }} "bam" "bam" 0.3 extract

        samtools index "${NAME}.bam" 2> stderr.txt
        indexrc=$?

        grep -Fq 'fail to index' stderr.txt
        indexerr=$?

        if [ -f "stderr.txt" ]; then
            cat stderr.txt
        fi

        # Position sort and re-index if indexing failed
        if [ $indexerr -eq 0 ] || [ $indexrc -ne 0 ]; then
            echo "SORTING input BAM file per coordinate:"
            samtools sort -o "${NAME}_aligned.bam" "${NAME}.bam" >&2
            re-checkrc
            re-progress 0.4
            mv "${NAME}_aligned.bam" "${NAME}.bam"
            re-checkrc
            echo "INDEXING input BAM file"
            samtools index "${NAME}.bam"
            re-checkrc
        fi

        samtools flagstat "${NAME}.bam" > "${NAME}_stats.txt"
        re-checkrc "Samtools flagstat command failed."

        re-save-file bam "${NAME}.bam"
        re-save-file bai "${NAME}.bam.bai"
        re-save-file stats "${NAME}_stats.txt"
        re-save species {{ species }}
        re-save build {{ build }}

- slug: upload-bam-indexed
  name: BAM file and index
  requirements:
    expression-engine: jinja
    executor:
      docker:
        image: public.ecr.aws/genialis/resolwebio/rnaseq:6.0.0
    resources:
      cores: 4
      network: true
  data_name: '{{ src.file|default("?") }}'
  version: 1.8.0
  type: data:alignment:bam:upload
  category: Import
  flow_collection: sample
  persistence: RAW
  description: |
    Import a BAM file (.bam) and BAM index (.bam.bai). BAM file is the binary
    format for storing sequence alignment data. This format is described on
    the [SAM Tools web site](http://samtools.github.io/hts-specs/).
  input:
    - name: src
      label: Mapping (BAM)
      type: basic:file
      description: |
        A mapping file in BAM format.
      validate_regex: '\.(bam)$'
    - name: src2
      label: bam index (*.bam.bai file)
      type: basic:file
      description: |
        An index file of a BAM mapping file (ending with bam.bai).
      validate_regex: '\.(bam.bai)$'
    - name: species
      label: Species
      type: basic:string
      description: |
        Species latin name.
      allow_custom_choice: true
      choices:
        - label: Homo sapiens
          value: Homo sapiens
        - label: Mus musculus
          value: Mus musculus
        - label: Rattus norvegicus
          value: Rattus norvegicus
        - label: Dictyostelium discoideum
          value: Dictyostelium discoideum
        - label: Odocoileus virginianus texanus
          value: Odocoileus virginianus texanus
        - label: Solanum tuberosum
          value: Solanum tuberosum
    - name: build
      label: Build
      type: basic:string
  output:
    - name: bam
      label: Uploaded file
      type: basic:file
    - name: bai
      label: Index BAI
      type: basic:file
    - name: stats
      label: Alignment statistics
      type: basic:file
    - name: species
      label: Species
      type: basic:string
    - name: build
      label: Build
      type: basic:string
  run:
    runtime: polyglot
    language: bash
    program: |
        re-import {{ src.file_temp }} {{ src.file }} "bam" "bam" 0.3 extract
        BAM_NAME="${NAME}"

        re-import {{ src2.file_temp|default(src2.file) }} {{ src2.file }} "bai" "bai" 0.3 extract
        BAI_NAME="${NAME}.bai"

        if [ "${BAM_NAME}.bam.bai" = "${BAI_NAME}" ]; then
          samtools flagstat "${BAM_NAME}.bam" > "${BAM_NAME}_stats.txt"
          re-checkrc "Samtools flagstat command failed."

          re-save-file bam "${BAM_NAME}.bam"
          re-save-file bai "${BAI_NAME}"
          re-save-file stats "${BAM_NAME}_stats.txt"
          re-save species {{ species }}
          re-save build {{ build }}
        else
          re-error "BAI should have the same name as BAM with .bai extension"
        fi
