# ======================================
# Import - Sequencing Reads - Muliplexed
# ======================================
---

- slug: upload-multiplexed-single
  name: Reads (multiplexed, single)
  data_name: '{{ reads.file|default:"?" }}'
  version: 1.0.16
  type: data:multiplexed:qseq:single
  category: upload
  persistence: RAW
  description: >
    Upload multiplexed NGS reds in QSEQ format.
  input:
    - name: reads
      label: Multiplexed NGS reads
      type: basic:file
      required: true
      validate_regex: '(\.(qseq)(|\.txt)(|\.gz|\.bz2|\.tgz|\.tar\.gz|\.tar\.bz2|\.zip|\.rar|\.7z))|(\.bz2)$'
      description: >
        NGS reads in QSeq format. Supported extensions: .qseq.txt.bz2 (preferred), .qseq.* or .qseq.txt.*.
    - name: barcodes
      label: NGS barcodes
      type: basic:file
      required: true
      validate_regex: '(\.(qseq)(|\.txt)(|\.gz|\.bz2|\.tgz|\.tar\.gz|\.tar\.bz2|\.zip|\.rar|\.7z))|(\.bz2)$'
      description: >
        Barcodes in QSeq format. Supported extensions: .qseq.txt.bz2 (preferred), .qseq.* or .qseq.txt.*.
    - name: annotation
      label: Barcode mapping
      type: basic:file
      validate_regex: '(\.csv|\.tsv)$'
      required: true
      description: >
        A tsv file mapping barcodes to experiment name, e.g. "TCGCAGG\tHr00".
  output:
    - name: qseq_reads
      label: Multiplexed NGS reads
      type: basic:file
    - name: qseq_barcodes
      label: NGS barcodes
      type: basic:file
    - name: annotation
      label: Barcode mapping
      type: basic:file
    - name: matched
      label: Matched
      type: basic:string
    - name: notmatched
      label: Not matched
      type: basic:string
    - name: badquality
      label: Bad quality
      type: basic:string
    - name: skipped
      label: Skipped
      type: basic:string
  run:
    runtime: polyglot
    bash: |
      re-import "{{ barcodes.file_temp|default:barcodes.file }}" "{{ barcodes.file }}" "qseq.*" "qseq" 0.01 compress
      BARCODES_NAME=$NAME

      re-import "{{ reads.file_temp|default:reads.file }}" "{{ reads.file }}" "qseq.*" "qseq" 0.1 compress
      READS_NAME=$NAME

      TEMP="{{ annotation.file_temp|default:annotation.file }}"
      mv "$TEMP" {{ annotation.file }}
      mkdir -p temp
      re-save-file annotation {{ annotation.file }} temp

      demultiplex.py "${BARCODES_NAME}.qseq.gz" "${READS_NAME}.qseq.gz" -m "{{ annotation.file }}" --progress-start 0.2
      re-checkrc

      re-save-file qseq_reads ${READS_NAME}.qseq.gz
      re-save-file qseq_barcodes ${BARCODES_NAME}.qseq.gz

- slug: upload-multiplexed-paired
  name: Reads (multiplexed, paired)
  data_name: '{{ reads.file|default:"?" }}'
  version: 1.0.16
  type: data:multiplexed:qseq:paired
  category: upload
  persistence: RAW
  description: >
    Upload multiplexed NGS reds in QSEQ format.
  input:
    - name: reads
      label: Multiplexed upstream reads
      type: basic:file
      required: true
      validate_regex: '((\.qseq|\.qseq\.txt)(\.gz|\.bz2|\.tgz|\.tar\.gz|\.tar\.bz2|\.zip|\.rar|\.7z))|(\.bz2)$'
      description: >
        NGS reads in QSeq format. Supported extensions: .qseq.txt.bz2 (preferred), .qseq.* or .qseq.txt.*.
    - name: reads2
      label: Multiplexed downstream reads
      type: basic:file
      required: true
      validate_regex: '((\.qseq|\.qseq\.txt)(\.gz|\.bz2|\.tgz|\.tar\.gz|\.tar\.bz2|\.zip|\.rar|\.7z))|(\.bz2)$'
      description: >
        NGS reads in QSeq format. Supported extensions: .qseq.txt.bz2 (preferred), .qseq.* or .qseq.txt.*.
    - name: barcodes
      label: NGS barcodes
      type: basic:file
      required: true
      validate_regex: '((\.qseq|\.qseq\.txt)(\.gz|\.bz2|\.tgz|\.tar\.gz|\.tar\.bz2|\.zip|\.rar|\.7z))|(\.bz2)$'
      description: >
        Barcodes in QSeq format. Supported extensions: .qseq.txt.bz2 (preferred), .qseq.* or .qseq.txt.*.
    - name: annotation
      label: Barcode mapping
      type: basic:file
      validate_regex: '(\.csv|\.tsv)$'
      required: true
      description: >
        A tsv file mapping barcodes to experiment name, e.g. "TCGCAGG\tHr00".
  output:
    - name: qseq_reads
      label: Multiplexed upstream reads
      type: basic:file
    - name: qseq_reads2
      label: Multiplexed downstream reads
      type: basic:file
    - name: qseq_barcodes
      label: NGS barcodes
      type: basic:file
    - name: annotation
      label: Barcode mapping
      type: basic:file
    - name: matched
      label: Matched
      type: basic:string
    - name: notmatched
      label: Not matched
      type: basic:string
    - name: badquality
      label: Bad quality
      type: basic:string
    - name: skipped
      label: Skipped
      type: basic:string
  run:
    runtime: polyglot
    bash: |
      re-import "{{ barcodes.file_temp|default:barcodes.file }}" "{{ barcodes.file }}" "qseq.*" "qseq" 0.01 compress
      BARCODES_NAME=$NAME

      re-import "{{ reads.file_temp|default:reads.file }}" "{{ reads.file }}" "qseq.*" "qseq" 0.07 compress
      READS_NAME=$NAME

      re-import "{{ reads2.file_temp|default:reads2.file }}" "{{ reads2.file }}" "qseq.*" "qseq" 0.14 compress
      READS_NAME2=$NAME

      TEMP="{{ annotation.file_temp|default:annotation.file }}"
      mv "$TEMP" {{ annotation.file }}
      mkdir -p temp
      re-checkrc
      re-save-file annotation {{ annotation.file }} temp

      demultiplex.py "${BARCODES_NAME}.qseq.gz" -1 "${READS_NAME}.qseq.gz" -2 "${READS_NAME2}.qseq.gz" -m "{{ annotation.file }}" --progress-start 0.22
      re-checkrc

      re-save-file qseq_reads ${READS_NAME}.qseq.gz
      re-save-file qseq_reads2 ${READS_NAME2}.qseq.gz
      re-save-file qseq_barcodes ${BARCODES_NAME}.qseq.gz
