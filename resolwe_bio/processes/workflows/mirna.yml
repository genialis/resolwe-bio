- slug: workflow-mirna
  category: workflow:primary
  name: miRNA pipeline
  data_name: "miRNA pipeline ({{ reads|sample_name|default('?') }})"
  requirements:
    expression-engine: jinja
  version: 0.0.1
  type: data:workflow:mirna
  input:
      # this set of parameters is for bowtie2
    - name: reads
      label: Input miRNA reads.
      type: data:reads:fastq
      description: >
        Note that these reads should already be void of adapters.
    - name: genome
      label: Genome
      type: data:genome:fasta
      # this set of parameters is for featureCounts
    - name: annotation
      label: Annotation (GTF/GFF3)
      type: data:annotation
    - name: id_attribute
      label: ID attribute
      type: basic:string
      default: gene_id
      allow_custom_choice: true
      choices:
        - label: gene_id
          value: gene_id
        - label: transcript_id
          value: transcript_id
        - label: ID
          value: ID
        - label: geneid
          value: geneid
      description: >
        GTF attribute to be used as feature ID. Several GTF lines with the
        same feature ID will be considered as parts of the same feature. The
        feature ID is used to identity the counts in the output table. If
        you want to count by "ID" and are using GFF3 format, make sure you
        select "Gene id (gff3)" option.
    # this next option could perhaps be hidden and hard-coded into the workflow
    - name: feature_class
      label: Feature class
      type: basic:string
      default: miRNA
      description: >
        Feature class (3rd column in GFF file) to be used, all features of other
        type are ignored.
  run:
    language: workflow
    program:
      - id: mirna_align_bowtie2
        run: alignment-bowtie2
        input:
          genome: '{{ input.genome }}'
          reads: '{{ input.reads }}'
      - id: mirna_featurecounts
        run: feature_counts
        input:
          alignments: '{{ steps.mirna_align_bowtie2 }}'
          annotation: '{{ input.annotation }}'
          id_attribute: '{{ input.id_attribute }}'
          feature_class: '{{ input.feature_class }}'
