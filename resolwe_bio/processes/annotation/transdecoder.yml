# =======================================
# Processors for transcriptome annotation
# =======================================
---

- slug: transdecoder
  name: TransDecoder (2.0.1)
  requirements:
    expression-engine: jinja
  data_name: "TransDecoder analysis ({{ gff.merged_gtf.file|basename|default('?') }})"
  version: 1.0.5
  type: data:annotation:transdecoder
  category: analyses
  persistence: CACHED
  description: >
    Identify candidate coding regions within transcript sequences.
  input:
    - name: gff
      label: Annotation (GTF)
      type: data:annotation:cuffmerge
      description: >
        A transcript annotation file produced by Cuffmerge.
    - name: genome
      label: Reference genome
      type: data:genome:fasta
      description: >
        Genome to be used for a transcript fasta file construction.
    - name: pfamDB
      label: Pfam database
      type: data:db:hmmer
      required: false
      description: >
        Pfam database to search against.
    - name: pfam
      label: Pfam domain search
      type: basic:boolean
      default: false
      description: >
        Retain transcripts with a Pfam domain hit.
    - name: threads
      label: Use this many processor threads
      type: basic:integer
      default: 1
      description: >
        Use this many processor threads.
    - name: m
      label: Minimum AA length
      type: basic:integer
      default: 100
  output:
    - name: gff
      label: TransDecoder transcripts (gff)
      type: basic:file
    - name: bed
      label: TransDecoder transcripts (bed)
      type: basic:file
  run:
    runtime: polyglot
    language: bash
    program: |
      echo "Prepare annotation file"
      sed '/_random/d;/chrUn/d' {{gff.merged_gtf.file}} > cuffmerge_annotation.gtf
      echo "{\"proc.progress\":0.05,\"proc.rc\":$?}"

      echo "Convert cuffmerge_annotation.gtf file to .gff3 file format"
      cufflinks_gtf_to_alignment_gff3.pl cuffmerge_annotation.gtf > cuffmerge_annotation.gff3
      echo "{\"proc.progress\":0.1,\"proc.rc\":$?}"

      cufflinks_gtf_genome_to_cdna_fasta.pl cuffmerge_annotation.gtf {{ genome.fasta.file }} > transcripts.fasta
      echo "{\"proc.progress\":0.20,\"proc.rc\":$?}"

      TransDecoder.LongOrfs -t transcripts.fasta {% if m %} -m {{m}} {% endif %}

      {% if pfam %}
        DB_PATH={{ proc.data_dir }}/{{ pfamDB|id }}/{{ pfamDB.database.refs.0 }}/{{ pfamDB.hmmerdb }}
        hmmscan --cpu '{{ threads }}' --domtblout pfam.domtblout ${DB_PATH} transcripts.fasta.transdecoder_dir/longest_orfs.pep
        TransDecoder.Predict -t transcripts.fasta --retain_pfam_hits pfam.domtblout
      {% else %}
        TransDecoder.Predict -t transcripts.fasta
      {% endif %}

      echo "{\"proc.progress\":0.90,\"proc.rc\":$?}"

      echo "Prepare genome aligned .gff3 annotation file"
      ## Does not procude a valid gff3 file!!
      cdna_alignment_orf_to_genome_orf.pl transcripts.fasta.transdecoder.gff3 cuffmerge_annotation.gff3 transcripts.fasta > temp.gff

      echo "Prepare and validate .gff and .bed tracks"
      gt gff3 -tidy yes -addids yes -fixregionboundaries yes -retainids yes -o transdecoder_annotation.gff temp.gff

      gt gff3validator transdecoder_annotation.gff

      gff3_file_to_bed.pl transdecoder_annotation.gff > transdecoder_annotation.bed

      echo "{\"proc.progress\":0.95,\"proc.rc\":$?}"

      echo "Prepare .gff and .bed tracks for JBrowse"
      flatfile-to-json.pl --gff transdecoder_annotation.gff --out . --trackLabel "gff-track"

      flatfile-to-json.pl --bed transdecoder_annotation.bed --out . --trackLabel "bed-track"

      echo "{\"proc.progress\":1,\"proc.rc\":$?,\"gff\":{\"file\":\"transdecoder_annotation.gff\",\"refs\":[\"tracks/gff-track\"]}, \"bed\":{\"file\":\"transdecoder_annotation.bed\",\"refs\":[\"tracks/bed-track\"]}}"
