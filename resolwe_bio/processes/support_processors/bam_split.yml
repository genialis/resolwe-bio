# ===================
# Hybrid bam splitter
# ===================
---

- slug: bam-split
  name: Bam split
  requirements:
    expression-engine: jinja
    executor:
      docker:
        image: resolwebio/rnaseq:1.1.0
  data_name: "{{ bam.bam.file.split('.')[0] }}_{{ bam.build.split('/')[0] }}.bam"
  version: 0.1.0
  type: data:alignment:bam:primary
  flow_collection: sample
  category: other
  persistence: CACHED
  description: >
    Split hybrid bam file into two bam files
  input:
    - name: bam
      label: Hybrid alignment bam
      type: data:alignment:bam
    - name: header
      label: Primary header sam file (optional)
      type: data:sam:header
      required: false
      description: >
        If no header file is provided, the headers will be extracted from the hybrid alignment bam file.
    - name: header2
      label: Secondary header sam file (optional)
      type: data:sam:header
      required: false
      description: >
        If no header file is provided, the headers will be extracted from the hybrid alignment bam file.
  output:
    - name: bam
      label: Uploaded file
      type: basic:file
    - name: bai
      label: Index BAI
      type: basic:file
    - name: species
      label: Species
      type: basic:string
    - name: build
      label: Build
      type: basic:string
  run:
    runtime: polyglot
    language: bash
    program: |
      {% if (header or header2) and not (header and header2) %}
        re-error "Both or no headers must be present"
      {% endif %}

      BAM={{ bam.bam.file }}
      NAME=`basename {{ bam.bam.file }} .bam`
      BUILD={{ bam.build }}
      BUILD1=${BUILD%/*}
      BUILD2=${BUILD##*/}

      {% set build_to_species = {
        'dm6': 'Drosophila melanogaster',
        }
      %}
      SPECIES1={{ bam.species }}
      SPECIES2={{ build_to_species[bam.build.split('/')[1]] }}
      if [ -z $SPECIES2 ]; then
        re-error "${BUILD} is not a valid hybrid genome build. Accepted builds are: \"mm10/dm6\", \"hg19/dm6\"."
      fi

      samtools view -h -o "${NAME}.sam" "${BAM}"
      re-checkrc
      re-progress 0.05

      {% if header %}
        HEADER={{ header.sam.file }}
        HEADER2={{ header2.sam.file }}
      {% else %}
        NUM=`grep -v @ "${NAME}.sam" -m 1 -n | cut -d ':' -f 1`
        SELECTION=`grep -e @ -m $((NUM-1)) "${NAME}.sam"`
        HEAD=`echo "$SELECTION" | grep -e @HD "${NAME}.sam"` 
        TAIL=`echo "$SELECTION" | grep -e @PG "${NAME}.sam"`
        re-checkrc
        re-progress 0.1

        echo "$HEAD" > header.sam
        echo "$SELECTION" | grep -e @SQ - | grep -v "_${BUILD2}" - >> header.sam
        echo "$TAIL" >> header.sam
        re-checkrc
        re-progress 0.15

        echo "$HEAD" > header2.sam
        echo "$SELECTION" | grep -e @SQ - | grep -e "_${BUILD2}" - | sed -e 's/_'${BUILD2}'//' - >> header2.sam
        echo "$TAIL" >> header2.sam
        re-checkrc
        re-progress 0.2

        HEADER=header.sam
        HEADER2=header2.sam
      {% endif %}

      samtools view -S -F 4 "${NAME}.sam" |
      awk -vOFS="	" \
      '{
        sindex=index($3,"_'${BUILD2}'")
        if(sindex >0) {
          $3=substr($3,1,sindex-1)
          print $0 > "'${NAME}'_'${BUILD2}'.sam";
        }
        else {
          print $0 > "'${NAME}'_'${BUILD1}'.sam";
        }
      }'
      re-checkrc
      re-progress 0.25

      cat "${HEADER}" "${NAME}_${BUILD1}.sam" | samtools view -bS - > "${NAME}_${BUILD1}_unsorted.bam"
      re-checkrc
      re-progress 0.3

      cat "${HEADER2}" "${NAME}_${BUILD2}.sam" | samtools view -bS - > "${NAME}_${BUILD2}_unsorted.bam"
      re-checkrc
      re-progress 0.4

      samtools sort "${NAME}_${BUILD1}_unsorted.bam" "${NAME}_${BUILD1}"
      re-checkrc
      re-progress 0.5

      samtools sort "${NAME}_${BUILD2}_unsorted.bam" "${NAME}_${BUILD2}"
      re-checkrc
      re-progress 0.6

      re-export "${NAME}_${BUILD2}.bam"
      echo 'run {"process":"upload-bam-secondary","input":{"bam":'{{ bam|id }}',"src":"'"${NAME}_${BUILD2}.bam"'","species":"'"${SPECIES2}"'","build":"'"${BUILD2}"'"}}'
      re-checkrc
      re-progress 0.8

      samtools index "${NAME}_${BUILD1}.bam"
      re-checkrc
      re-progress 1.0

      re-save-file bam "${NAME}_${BUILD1}.bam"
      re-save-file bai "${NAME}_${BUILD1}.bam.bai"
      re-save species "${SPECIES1}"
      re-save build ${BUILD1}
