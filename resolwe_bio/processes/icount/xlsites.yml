- slug: icount-xlsites
  name: iCount xlsites
  description: >
    Quantity and determine positions of cross-link events
  category: analyses:icount
  version: 1.0.2
  type: data:bed:icount
  requirements:
    expression-engine: jinja
    executor:
      docker:
        image: "resolwe/bio-linux8-resolwe-preview:icount"
  data_name: "iCount-xlsites ({{bam.bam.file|basename|default('?')}})"
  flow_collection: sample
  persistence: CACHED
  input:
  - name: bam
    label: BAM file with mapped reads
    type: data:alignment:bam
  - name: group_by
    label: Assign score of a read to either 'start', 'middle' or 'end' nucleotide
    type: basic:string
    default: start
  - name: quant
    label: Report number of 'cDNA' or number of 'reads'
    type: basic:string
    default: cDNA
  - name: segmentation
    label: File with custon annotation format (obtained by iCount segment)
    type: data:annotation:gtf:icount
    required: false
  - name: mismatches
    label: Reads with random barcode differing less than mismatches are merged
    type: basic:integer
    default: 2
  - name: mapq_th
    label: Ignore hits with MAPQ < mapq_th
    type: basic:integer
    default: 0
  - name: multimax
    label: Ignore reads, mapped to more than ``multimax`` places
    type: basic:integer
    default: 50
  - name: gap_th
    label: Reads with gaps less than gap_th are treated as if they have no gap
    type: basic:integer
    default: 4
  - name: report_progress
    label: Switch to report progress
    type: basic:boolean
    default: false
  output:
  - name: BED
    label: Output BED6 file to store data from uniquely mapped reads
    type: basic:file
  - name: BED_multi
    label: Output BED6 file to store data from multi-mapped reads
    type: basic:file
  - name: skipped
    label: Reads that do not map as expected are stored in here.
    type: basic:file
    required: false
  - name: qc
    label: QC status
    type: basic:json
  run:
    language: bash
    runtime: polyglot
    program: |
      # Make a nice output name:
      UNIQUENAME=$(extend_name.py -f {{bam.bam.file}} -r -a _unique.bed.gz -e bam)
      MULTINAME=$(extend_name.py -f {{bam.bam.file}} -r -a _multi.bed.gz -e bam)
      SKIPPEDNAME=$(extend_name.py -f {{bam.bam.file}} -r -a _skipped.bam -e bam)

      iCount xlsites {{bam.bam.file}} $UNIQUENAME $MULTINAME $SKIPPEDNAME \
          --group_by {{group_by}} \
          --quant {{quant}} \
          {% if segmentation %} --segmentation {{segmentation.gtf.file}}{% endif %} \
          --mismatches {{mismatches}} \
          --mapq_th {{mapq_th}} \
          --multimax {{multimax}} \
          --gap_th {{gap_th}} \
          {% if report_progress %} --report_progress {% endif %}

      re-checkrc

      READS=`samtools view -F 0x04 -c {{bam.bam.file}}`
      icount_qc.py $READS $(gzip -d -c $MULTINAME | cat | wc -l)

      re-progress 0.9
      re-save-file BED $UNIQUENAME
      re-save-file BED_multi $MULTINAME
      [[ -e ./"$SKIPPEDNAME" ]] && re-save-file skipped $SKIPPEDNAME || echo "$SKIPPEDNAME was not produced"
