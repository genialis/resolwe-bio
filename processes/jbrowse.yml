# ========================================
# Processors for JBrowse tracks processing
# ========================================
#
---

- name: jbrowse:refseq
  version: 1.0.1
  label: Build reference sequence track (JBrowse)
  type: data:jbrowse:refseq:genome
  category: jbrowse
  persistence: CACHED
  description: >
    Prepare reference sequence (genome) track for JBrowse.
  input:
    - name: refseq
      label: Reference genome sequence
      type: data:genome:fasta
      description: >
        Reference genome sequence in FASTA format.
  output:
    - name: refseq_track
      label: RefSeq file
      type: basic:file
  static:
    - name: name
      label: Name
      type: basic:string
      default: 'RefSeq track ({{ refseq.fasta.file|default:"?" }})'
    - name: experiment
      label: Experiment
      type: basic:string
    - name: attachments
      label: Attachments
      type: list:basic:file
  run:
    runtime: polyglot
    bash: |
      gen-require common
      gen-require jbrowse-1.11.6/bin

      prepare-refseqs.pl --fasta '{{refseq.fasta.file}}' --out .
      gen-checkrc "Reference sequence processing for JBrowse failed."
      gen-progress 0.9
      gen-save-file refseq_track seq/refSeqs.json seq


- name: jbrowse:gff3
  version: 1.0.1
  label: Build GFF3 annotation track (JBrowse)
  type: data:jbrowse:annotation:gff3
  category: jbrowse
  persistence: CACHED
  description: >
    Prepare GFF3 annotation track for JBrowse.
  input:
    - name: gff
      label: Annotation file (GFF3)
      type: data:annotation:gff3
      description: >
        Annotation file (GFF3)
  output:
    - name: annotation_track
      label: Annotation track (GFF3)
      type: basic:file
  static:
    - name: name
      label: Name
      type: basic:string
      default: 'Annotation track ({{ gff.gff.file|default:"?" }})'
    - name: experiment
      label: Experiment
      type: basic:string
    - name: attachments
      label: Attachments
      type: list:basic:file
  run:
    runtime: polyglot
    bash: |
      gen-require common
      gen-require jbrowse-1.11.6/bin

      flatfile-to-json.pl --gff '{{gff.gff.file}}' --out . --trackLabel "annotation"
      gen-checkrc "Annotation track processing for JBrowse failed."
      gen-save-file annotation_track trackList.json tracks/annotation


- name: jbrowse:gtf
  version: 1.0.1
  label: Build GTF annotation track (JBrowse)
  type: data:jbrowse:annotation:gtf
  category: jbrowse
  persistence: CACHED
  description: >
    Prepare GTF annotation track for JBrowse.
  input:
    - name: gtf
      label: Annotation file (GTF)
      type: data:annotation:gtf
      description: >
        Annotation file (GTF)
  output:
    - name: annotation_track
      label: Annotation track (GTF)
      type: basic:file
  static:
    - name: name
      label: Name
      type: basic:string
      default: 'Annotation track ({{ gtf.gtf.file|default:"?" }})'
    - name: experiment
      label: Experiment
      type: basic:string
    - name: attachments
      label: Attachments
      type: list:basic:file
  run:
    runtime: polyglot
    bash: |
      gen-require common
      gen-require jbrowse-1.11.6/bin

      flatfile-to-json.pl --gff '{{gtf.gtf.file}}' --out . --trackLabel "annotation"
      gen-checkrc "Annotation track processing for JBrowse failed."
      gen-save-file annotation_track trackList.json tracks/annotation


- name: jbrowse:bed
  version: 1.0.0
  label: Build BED annotation track (JBrowse)
  type: data:jbrowse:annotation:bed
  category: jbrowse
  persistence: CACHED
  description: >
    Prepare BED annotation track for JBrowse.
  input:
    - name: bed
      label: BED file
      type: data:bed
      required: false
      description: >
        Annotation file (BED)
    - name: macs2
      label: MACS2 results
      type: data:chipseq:macs2:callpeak
      required: false
      description: >
        NarrowPeak file (BED format) produced by MACS2
  output:
    - name: bed_track
      label: Annotation track (BED)
      type: basic:file
  static:
    - name: name
      label: Name
      type: basic:string
      default: 'BED annotation track (JBrowse)'
    - name: experiment
      label: Experiment
      type: basic:string
    - name: attachments
      label: Attachments
      type: list:basic:file
  run:
    runtime: polyglot
    bash: |
      gen-require common
      gen-require jbrowse-1.11.6/bin

      {% if not bed.BED.file and not macs2.narrow_peaks.file %}
        gen-warning "Please select only one file type (BAM file or MACS2 results file) as an input."
        gen-error "Missing input files."
      {% endif %}

      {% if bed.BED.file and macs2.narrow_peaks.file %}
        gen-error "Please select only one file type (BAM file or MACS2 results file) as an input."
      {% endif %}

      {% if bed.BED.file %}
        flatfile-to-json.pl --bed '{{bed.BED.file}}' --out . --trackLabel "bed"
        gen-checkrc "BED track processing for JBrowse failed."
      {% endif %}

      {% if macs2.narrow_peaks.file %}
        flatfile-to-json.pl --bed '{{macs2.narrow_peaks.file}}' --out . --trackLabel "bed"
        gen-checkrc "BED track processing for JBrowse failed."
      {% endif %}

      gen-save-file bed_track trackList.json tracks/bed


- name: jbrowse:bam:coverage
  version: 1.0.1
  label: Build coverage track (JBrowse)
  type: data:jbrowse:bigwig:coverage
  category: analyses
  persistence: CACHED
  description: >
    Prepare genome-wide coverage track in BigWig format.
  input:
    - name: bam
      label: BAM mapping
      type: data:alignment:bam
  output:
    - name: bigwig_track
      label: Genome coverage (BigWig)
      type: basic:file
  static:
    - name: name
      label: Name
      type: basic:string
      default: "Coverage track ({{bam.bam.file}})"
    - name: experiment
      label: Experiment
      type: basic:string
    - name: attachments
      label: Attachments
      type: list:basic:file
  run:
    runtime: polyglot
    bash: |
      gen-require common
      gen-require samtools-0.1.19
      gen-require bedtools-2.17.0
      gen-require kentUtils-2.9.1

      NAME='{{bam.bam.file}}'
      BIGWIGOUT=`basename '{{bam.bam.file}}' .bam`
      gen-checkrc
      gen-progress 0.1

      samtools idxstats "${NAME}" | cut -f -2 | head -n -1 > chrom.sizes
      gen-checkrc
      gen-progress 0.15

      genomeCoverageBed -bg -ibam "${NAME}" -g chrom.sizes > tmp.bedgraph
      gen-checkrc
      gen-progress 0.80

      bedGraphToBigWig tmp.bedgraph chrom.sizes "${BIGWIGOUT}.bw"
      gen-checkrc
      gen-progress 0.90

      gen-save-file bigwig_track ${BIGWIGOUT}.bw

- name: jbrowse:bam:coverage:normalized
  version: 1.0.0
  label: Build normalized coverage track (JBrowse)
  type: data:jbrowse:bigwig:coverage:normalized
  category: analyses
  persistence: CACHED
  description: >
    Prepare genome-wide normalized coverage track in BigWig format. The method uses bamCoverage tool from Deeptools software package.
  input:
    - name: bam
      label: BAM mapping
      type: data:alignment:bam
    - name: normalize
      label: Normalization method
      type: basic:string
      default: --normalizeTo1x
      choices:
        - label: normalizeTo1x (RPGC)
          value: --normalizeTo1x
        - label: normalizeUsingRPKM
          value: --normalizeUsingRPKM
    - name: size
      label: Mappable genome size
      type: basic:integer
      required: false
      disabled: "normalize != '--normalizeTo1x'"
      placeholder: '34000000'
      description: >
        Used for reporting coverage normalized to 1x sequencing depth (also known as Reads Per Genomic Content (RPGC)). Sequencing depth is defined as: (total number of mapped reads * fragment length) / effective genome size. The effective genome size is the portion of the genome that is mappable. Large fractions of the genome are stretches of NNNN that should be discarded. Also, if repetitive regions were not included in the mapping of reads, the effective genome size needs to be adjusted accordingly. Common values are: mouse/mm9: 2150570000, human/hg19:2451960000, D.melanogaster/dm3:121400000 and C.elegans/ce10:93260000.
    - name: fragmentLength
      label: Fragment length
      type: basic:integer
      default: 200
      description: >
        Length of the average fragment size. Reads will be extended to match this length unless they are paired- end, in which case they will be extended to match the fragment length. If this value is set to the read length or smaller, the read will not be extended. Warning the fragment length affects the normalization to 1x (see --normalizeTo1x). The formula to normalize using the sequencing depth is genomeSize/(number of mapped reads * fragmentLength). NOTE: If the BAM files contain mated and unmated paired-end reads, unmated reads will be extended to match the --fragmentLength. (default: 200)
    - name: binSize
      label: Bin size
      type: basic:integer
      default: 50
      description: >
        Size of the bins in bp for the output of the bigWig file.
  output:
    - name: bigwig_track
      label: Genome coverage (BigWig)
      type: basic:file
  static:
    - name: name
      label: Name
      type: basic:string
      default: "Normalized coverage track ({{bam.bam.file}})"
    - name: experiment
      label: Experiment
      type: basic:string
    - name: attachments
      label: Attachments
      type: list:basic:file
  run:
    runtime: polyglot
    bash: |
      gen-require common
      gen-require kentUtils-2.9.1

      {% if normalize == "--normalizeTo1x" and not size %}
        gen-error "Please provide mappable genome size when using 'normalizeTo1x' normalization method."
      {% endif %}

      gen-progress 0.1

      NAME=`basename '{{ bam.bam.file }}' .bam`

      bamCoverage --bam '{{bam.bam.file}}' --outFileName ${NAME}.bigWig --outFileFormat bigwig '{{normalize}}' {% if normalize == "--normalizeTo1x" %} '{{size}}' {% endif %} --binSize '{{binSize}}' --fragmentLength '{{fragmentLength}}' --verbose
      gen-checkrc "Normalized coverage track computation failed."
      gen-progress 0.9

      gen-save-file bigwig_track ${NAME}.bigWig
