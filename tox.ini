[tox]
envlist = py{27,34,35},docs,linters,packaging,extra
skip_missing_interpreters = True

[tox:jenkins]
# set Tox's working directory using environment variable when run on Jenkins
toxworkdir={env:TOX_WORKDIR}

# NOTE: Don't use 'deps = .[<extra-requirements>]' tox option since we
# want Tox to install the package from sdist first

[testenv]
install_command = pip install --process-dependency-links {opts} {packages}
commands =
# install testing requirements
    pip install --process-dependency-links .[test]
# pull Docker image manually to prevent skewing the time needed by first test
    bash -c \'{env:RESOLWE_DOCKER_COMMAND:docker} pull $(python -c \
        "from django.conf import settings; \
         print(settings.FLOW_EXECUTOR[\"CONTAINER_IMAGE\"])" \
    )\'
# run tests
    python tests/manage.py test {env:TEST_SUITE:resolwe_bio} --noinput \
        --verbosity 2 --parallel
whitelist_externals = bash
setenv =
# Bash command that pulls Docker image needs to access Django's settings
    DJANGO_SETTINGS_MODULE=tests.settings
# it is necessary to explicitly list the environment variables that need to be
# passed from Tox's invocation environment to the testing environment
passenv = TOXENV RESOLWE_* RESOLWEBIO_* DOCKER_* DJANGO_TEST_PROCESSES

[testenv:docs]
# to build the documentation Python 3 must be used
basepython = python3
commands =
# install documentation requirements
    pip install --process-dependency-links .[docs]
# build documentation
    python setup.py build_sphinx --fresh-env --warning-is-error

[testenv:linters]
# we want to always run linters with Python 3
basepython = python3
# run all linters to see their output even if one of them fails
ignore_errors = True
setenv =
# enable pylint to find modules in tools package even if it is not installed
    PYTHONPATH = {toxinidir}/resolwe_bio/tools
commands =
# install testing requirements
    pip install --process-dependency-links .[test]
# run pylint
    pylint resolwe_bio .scripts/check_large_files.py
# check PEP 8
    pycodestyle resolwe_bio .scripts
# check PEP 257
    pydocstyle resolwe_bio .scripts

[testenv:packaging]
# we want to always run packaging tests with Python 3
basepython = python3
commands =
# install testing requirements
    pip install --process-dependency-links .[test]
# confirm that items checked into git are in sdist
    check-manifest
# verify package metadata and confirm the long_description will render
# correctly on PyPI
    python setup.py check --metadata --restructuredtext --strict

[testenv:extra]
# we want to always run extra tests with Python 3
basepython = python3
# we don't need to install the package for this test
skip_install = True
commands =
# check that there are no large test files in resolwe_bio/tests/files
    python .scripts/check_large_files.py resolwe_bio/tests/files

