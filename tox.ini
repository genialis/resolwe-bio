[tox]
envlist =
    py{34,35,36}{,-partial},
    docs,
    linters,
    packaging,
    extra,
    migrations
skip_missing_interpreters = True

[tox:jenkins]
# set Tox's working directory using environment variable when run on Jenkins
toxworkdir={env:TOX_WORKDIR}

# NOTE: Running 'pip check' after installation is necessary since pip currently
# lacks dependency resolution which means it can silently create broken
# installations.
# For more details, see: https://github.com/pypa/pip/issues/988

[testenv]
install_command = pip install --process-dependency-links {opts} {packages}
extras = test
commands =
    # verify installed packages have compatible dependencies
    pip check
    # run tests
    python tests/manage.py test {env:TEST_SUITE:resolwe_bio} --noinput \
        # only test changes against a given Git commit reference for *-partial
        # testing environments (default to "master" branch)
        py{34,35,36}-partial: --only-changes-to \
        py{34,35,36}-partial: {env:RESOLWE_TEST_ONLY_CHANGES_TO:master} \
        py{34,35,36}-partial: --changes-file-types .resolwebio-filetypes.yml \
        --verbosity 2 --parallel
# it is necessary to explicitly list the environment variables that need to be
# passed from Tox's invocation environment to the testing environment
passenv = TOXENV RESOLWE_* RESOLWEBIO_* DOCKER_* DJANGO_TEST_PROCESSES

[testenv:docs]
# to build the documentation Python 3 must be used
basepython = python3
extras = docs
commands =
    # verify installed packages have compatible dependencies
    pip check
    # build documentation
    python setup.py build_sphinx --fresh-env --warning-is-error

[testenv:linters]
# we want to always run linters with Python 3
basepython = python3
# run all linters to see their output even if one of them fails
ignore_errors = True
setenv =
    # enable pylint to find modules in tools package even if it is not
    # installed
    PYTHONPATH = {toxinidir}/resolwe_bio/tools
commands =
    # verify installed packages have compatible dependencies
    pip check
    # run pylint
    pylint resolwe_bio .scripts/check_large_files.py
    # check PEP 8
    pycodestyle resolwe_bio .scripts
    # check PEP 257
    pydocstyle resolwe_bio .scripts

[testenv:packaging]
# we want to always run packaging tests with Python 3
basepython = python3
commands =
    # verify installed packages have compatible dependencies
    pip check
    # confirm that items checked into git are in sdist
    check-manifest
    # verify package metadata and confirm the long_description will render
    # correctly on PyPI
    python setup.py check --metadata --restructuredtext --strict

[testenv:extra]
# we want to always run extra tests with Python 3
basepython = python3
# we don't need to install the package for this test
skip_install = True
commands =
    # check that there are no large test files in resolwe_bio/tests/files
    python .scripts/check_large_files.py resolwe_bio/tests/files

[testenv:migrations]
# we want to always run migrations tests with Python 3
basepython = python3
whitelist_externals =
    bash
    psql
commands =
    psql --username={env:RESOLWE_POSTGRESQL_USER:resolwe} \
        --host={env:RESOLWE_POSTGRESQL_HOST:localhost} \
        --port={env:RESOLWE_POSTGRESQL_PORT:5432} \
        --command='CREATE DATABASE "'\
        {env:RESOLWE_POSTGRESQL_NAME:resolwe-bio}'"'
    python tests/manage.py migrate
    bash -c '[[ $(./tests/manage.py makemigrations --dry-run) = '\
        '"No changes detected" ]] || exit 1'
passenv = TOXENV RESOLWE_* RESOLWEBIO_*
